#!/usr/bin/env ruby

require 'exif_gps_injector'
require 'ruby-progressbar'

options = {}
OptionParser.new do |opt|
  opt.on('--kml-dir KML_DIR') { |o| options[:kml_dir] = o }
  opt.on('--input-dir INPUT_DIR') { |o| options[:input_dir] = o }
  opt.on('--replace-original-file') { options[:replace_original_file] = true }
  opt.on('--fallback-location FALLBACK_LOCATION') { |o| options[:fallback_location] = o }
end.parse!

pwd = ENV['PWD']
options[:kml_dir] ||= pwd
options[:input_dir] ||= pwd
options[:replace_original_file] ||= false

kml = ExifGpsInjector::Kml.new(dir: options[:kml_dir])
files = (Dir[File.join(options[:input_dir], '/*.jpg')] + Dir[File.join(options[:input_dir], '/*.mp4')])
progressbar = ProgressBar.create(starting_at: 0, total: files.count)

puts "#{files.count} files found"

files.each do |file|
  unless options[:replace_original_file]
    FileUtils.cp(file, "#{File.dirname(file)}/_#{File.basename(file)}")
    file = "#{File.dirname(file)}/_#{File.basename(file)}"
  end
  media = ExifGpsInjector::Media.new(file)
  location = kml.locate_at(media.original_date_time.to_s)
  location ||= options[:fallback_location] unless options[:fallback_location].to_s.empty?
  long, lat, alt = location.split(' ')
  media.location = { gps_latitude: lat, gps_longitude: long, gps_altitude: alt }
  progressbar.increment
end
